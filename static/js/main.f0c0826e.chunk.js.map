{"version":3,"sources":["withRoot.tsx","model/build.ts","actions/index.ts","actions/build.ts","components/BranchBuild.tsx","components/Drawer.tsx","components/Form/CategoryFilter.tsx","components/Form/BuildForm.tsx","components/Build.tsx","pages/HomePage.tsx","pages/StatsPage.tsx","Routes.tsx","App.tsx","reducers/build.ts","reducers/createReducer.ts","configureStore.tsx","reducers/index.ts","ReduxRoot.tsx","index.tsx"],"names":["theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","type","BuildActions","useActions","actions","deps","dispatch","useDispatch","useMemo","Array","isArray","map","a","bindActionCreators","initBuildData","LOADING_BUILDS","fetch","process","method","then","response","json","data","lastModified","headers","has","Date","get","undefined","BUILD_LOADED","payload","toggleFilter","TOGGLE_FILTER","setTerm","term","triggerSearchTimeout","setTimeout","TRIGGER_SEARCH","SET_TERM","setCategoryFilter","categoryFilters","SET_CATEGORY_FILTER","buildStateColours","failed","errored","passed","running","created","started","expired","canceled","variantByState","BranchBuild","module","branch","build","id","state","classes","useStyles","Button","href","variant","className","branchBtn","makeStyles","props","background","property","mapping","styledBy","margin","flexGrow","textDecoration","states","legendStyles","legend","width","height","borderRadius","Drawer","useSelector","ago","Math","round","getTime","history","useHistory","root","drawerHeader","Divider","List","ListItem","button","onClick","push","ListItemIcon","ListItemText","component","drawerSpacer","ListSubheader","key","mixins","toolbar","drawerPaper","backgroundColor","default","breakpoints","up","position","minHeight","display","flexDirection","categories","core","supported","unsupported","nonmodule","CategoryFilter","ReduxActions","FormControl","InputLabel","color","Select","labelId","multiple","value","onChange","event","target","input","Input","renderValue","selected","join","Object","keys","MenuItem","Checkbox","checked","indexOf","spacing","BuildForm","filter","FormGroup","row","TextField","label","FormControlLabel","control","Switch","Build","name","branches","Grid","item","xs","sm","md","style","Card","box","CardContent","Typography","gutterBottom","cardActions","text","flexWrap","HomePage","modules","loading","CircularProgress","centerContainer","container","direction","justify","alignItems","textAlign","paddingTop","paddingLeft","paddingRight","marginTop","labels","buildData","stats","datasets","StatsPage","Routes","exact","path","overflow","Component","zIndex","appFrame","appBar","drawer","appTitle","appForm","navIconHide","withRoot","todoActions","React","mobileOpen","setMobileOpen","isMobile","useMediaQuery","down","handleDrawerToggle","basename","AppBar","Toolbar","IconButton","aria-label","noWrap","Hidden","mdUp","anchor","open","paper","onClose","ModalProps","keepMounted","smDown","ThemeProvider","CssBaseline","initialState","raw","statePriority","sortByState","b","stateGroups","moduleBranchFilter","mod","nextBranches","nextMajor","nextMinor","match","parseInt","reduce","max","toString","patches","RegExp","replace","trim","sort","slice","subVersion","length","nextPatch","previousPatch","values","branchStateReduce","accumulator","markExpiredBuild","buildDate","started_at","now","expiry","setDate","getDate","postProcess","moduleName","moduleMetaDada","ssModuleData","find","meta","repo","filterModule","stateSort","localeCompare","sortModule","reducer","handlers","action","hasOwnProperty","createReducer","nextFilter","next","clearTimeout","toLocaleLowerCase","bulidState","forEach","countBuildStateType","persistConfig","version","storage","localforage","blacklist","middleware","createLogger","createBrowserHistory","applyMiddleware","thunk","persistedReducer","persistReducer","combineReducers","todoReducer","store","createStore","persistor","persistStore","configureStore","rootEl","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.f0c0826e.chunk.js","sourcesContent":["import { CssBaseline } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport * as React from \"react\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tlight: \"#e5e5e5\",\n\t\t\tmain: \"#727272\",\n\t\t\tdark: \"#363839\",\n\t\t\tcontrastText: \"#fff\",\n\t\t},\n\t\tsecondary: {\n\t\t\tlight: \"#005AE1\",\n\t\t\tmain: \"#0F3287\",\n\t\t\tdark: \"#051E2D\",\n\t\t\tcontrastText: \"#fff\",\n\t\t},\n\t\ttype: 'dark'\n\t},\n});\n\nexport function withRoot(Component: any) {\n\tfunction WithRoot(props: object) {\n\t\t// MuiThemeProvider makes the theme available down the React tree\n\t\t// thanks to React context.\n\t\treturn (\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t{/* Reboot kickstart an elegant, consistent, and simple baseline to build upon. */}\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Component {...props} />\n\t\t\t</ThemeProvider>\n\t\t);\n\t}\n\n\treturn WithRoot;\n}\n","\nexport type BuildStateType = 'passed'|'errored'|'failed'|'running'|'expired'|'canceled'|'created'|'started';\nexport type FilterType = 'all'|'latestStable';\nexport type CategoryFilterType = 'core'|'supported'|'unsupported'|'nonmodule';\n\nexport interface BranchData {\n  id: number\n  started_at: string\n  state: BuildStateType\n}\n\nexport interface BranchList {\n  [branch: string]: BranchData\n}\n\nexport interface BuildData {\n  [module: string]: {\n    [branch: string]: BranchData\n  }\n}\n\nexport interface BuildDataPayload {\n  json: BuildData\n  lastModified: Date\n}\n\nexport interface SetTermPayload {\n  term: string, \n  triggerSearchTimeout: number\n}\n\nexport interface SetCatPayload {\n  categoryFilters: CategoryFilterType[]\n}\nexport interface Module {\n  name: string\n  branches: BranchList\n  state: BuildStateType\n}\n\nexport type BuildActionType<t,p> = {\n  type: t\n  payload: p\n}\n\nexport enum BuildActions {\n  LOADING_BUILDS = \"LOADING_BUILDS\",\n  BUILD_LOADED = \"BUILD_LOADED\",\n  TOGGLE_FILTER = \"TOGGLE_FILTER\",\n  SET_TERM = \"SET_TERM\",\n  TRIGGER_SEARCH = \"TRIGGER_SEARCH\",\n  SET_CATEGORY_FILTER = \"SET_CATEGORY_FILTER\",\n}\n\nexport type BuildAction =\n  | BuildActionType<typeof BuildActions.LOADING_BUILDS, void>\n  | BuildActionType<typeof BuildActions.BUILD_LOADED, BuildDataPayload>\n  | BuildActionType<typeof BuildActions.TOGGLE_FILTER, void>\n  | BuildActionType<typeof BuildActions.SET_TERM, SetTermPayload>\n  | BuildActionType<typeof BuildActions.TRIGGER_SEARCH, void>\n  | BuildActionType<typeof BuildActions.SET_CATEGORY_FILTER, SetCatPayload>\n;\n\nexport interface BuildState {\n  modules: Module[],\n  loading: boolean,\n  lastModified?: Date,\n  raw: BuildData,\n  filter: FilterType,\n  term: string,\n  triggerSearchTimeout?: number,\n  categoryFilters: CategoryFilterType[],\n  stats: {[state in BuildStateType]: number}\n}\n","import { useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nexport function useActions(actions: any, deps?: any): any {\n\tconst dispatch = useDispatch();\n\treturn useMemo(\n\t\t() => {\n\t\t\tif (Array.isArray(actions)) {\n\t\t\t\treturn actions.map(a => bindActionCreators(a, dispatch));\n\t\t\t}\n\t\t\treturn bindActionCreators(actions, dispatch);\n\t\t},\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\tdeps ? [dispatch, ...deps] : deps\n\t);\n}\n","import { BuildActions, CategoryFilterType } from \"../model\";\n\ninterface reduxAction {\n\ttype: string,\n\tpayload?: any\n}\n\ntype dispatchCallback = (action: reduxAction) => void;\n\nexport function initBuildData() {\n\treturn (dispatch: dispatchCallback) => {\n\t\tdispatch({type: BuildActions.LOADING_BUILDS});\n\n\t\tfetch(process.env.PUBLIC_URL + '/buildData.json', {method: 'GET'})\n\t\t  .then((response) => response.json().then((data) => ({ \n\t\t\tjson: data,\n\t\t\tlastModified: \n\t\t\t\tresponse.headers.has('last-modified') ? \n\t\t\t\tnew Date(response.headers.get('last-modified') as string) : \n\t\t\t\tundefined\n\t\t  \t})))\n\t\t  .then(data => dispatch({type: BuildActions.BUILD_LOADED, payload: data}));\n\t\t\n\t}\n}\n\nexport function toggleFilter() {\n\treturn {type: BuildActions.TOGGLE_FILTER}\n}\n\nexport function setTerm(term: string) {\n\treturn (dispatch: dispatchCallback) => {\n\t\tconst triggerSearchTimeout = setTimeout(() => {\n\t\t\tdispatch({type: BuildActions.TRIGGER_SEARCH});\n\t\t}, 500)\n\n\t\tdispatch({\n\t\t\ttype: BuildActions.SET_TERM, \n\t\t\tpayload:{\n\t\t\t\tterm,\n\t\t\t\ttriggerSearchTimeout\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function setCategoryFilter(categoryFilters: CategoryFilterType[]) {\n\treturn {type: BuildActions.SET_CATEGORY_FILTER, payload: {categoryFilters}}\n}","import { makeStyles, Button } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport {BuildStateType} from \"../model/build\";\n\nexport const buildStateColours: { [state in BuildStateType]: string } = {\n\tfailed: \"#FE6B8B\",\n\terrored: \"#FE6B8B\",\n\tpassed: \"#61b047\",\n\trunning: \"#fede6b\",\n\tcreated: \"#fede6b\",\n\tstarted: \"#fede6b\",\n\texpired: \"#6b8bfe\",\n\tcanceled: \"#ad495e\",\n};\n\ninterface Props {\n\tmodule: string,\n\tbranch: string,\n\tbuild: {\n\t\tid: number,\n\t\tstate: string\n\t}\n}\n\nconst variantByState: any = {\n\terrored: 'contained',\n\tfailed: 'contained',\n\tpassed: 'outlined',\n\tcreated:  'contained',\n\tstarted:  'contained',\n\trunning:  'contained',\n}\n\nexport function BranchBuild({module, branch, build: {id, state}}: Props) {\n\tconst classes = useStyles({state});\n\treturn <Button \n\t\thref={`https://travis-ci.com/github/${module}/builds/${id}`} \n\t\tvariant={variantByState[state]} \nclassName={classes.branchBtn}>{branch}</Button>;\n}\n\nconst styledBy = (property: string, props: any, mapping: any): string =>\n\tmapping[props[property]];\n\nconst useStyles = makeStyles(({\n\tbranchBtn: props => {\n\t\tconst background = styledBy('state', props, buildStateColours)\n\t\treturn {\n\t\t\tmargin: '0 8px 8px 0',\n\t\t\tflexGrow: 1,\n\t\t\tbackground,\n\t\t\ttextDecoration: 'none',\n\t\t\t'&:hover': { background }\n\t\t}\n\t},\n}));\n","// prettier-ignore\nimport { Divider, List, ListItem, ListItemIcon, ListItemText, ListSubheader } from \"@material-ui/core\";\nimport { Theme } from \"@material-ui/core/styles\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport PieChartIcon from '@material-ui/icons/PieChart';\nimport GitHub from \"@material-ui/icons/GitHub\";\nimport UpdateIcon from '@material-ui/icons/Update';\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../reducers/index\";\nimport { BuildStateType } from \"../model\";\nimport { buildStateColours } from './BranchBuild';\nimport { useHistory } from 'react-router-dom';\n\nconst states: BuildStateType[] = [\n\t'failed',\n\t'canceled',\n\t'expired',\n\t'running',\n\t'passed'\n];\n\nconst styledBy = (property: string, props: any, mapping: any): string =>\n\tmapping[props[property]]\n\nconst legendStyles = makeStyles({\n\tlegend: props => ({\n\t\tbackground: styledBy('state', props, buildStateColours),\n\t\twidth: 24,\n\t\theight: 24,\n\t\tborderRadius: 3\n\t})\n});\n\nexport function Drawer(props: {  }) {\n\tconst classes = useStyles();\n\tconst lastModified = useSelector((state: RootState) => state.build.lastModified);\n\tconst ago = lastModified ? \n\t    `Fetched ${Math.round(((new Date()).getTime() - lastModified.getTime()) / 1000 / 60)} min ago` :\n\t\t'';\n\tconst history = useHistory();\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div className={classes.drawerHeader} />\n\t\t\t<Divider />\n\t\t\t<List>\n\t\t\t\t<ListItem button onClick={() => history.push(\"/\")}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<HomeIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary=\"Builds\" />\n\t\t\t\t</ListItem>\n\t\t\t\t<ListItem button onClick={() => history.push(\"/stats\")}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<PieChartIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary=\"Stats\" />\n\t\t\t\t</ListItem>\n\t\t\t\t<ListItem component=\"a\" button href=\"https://github.com/maxime-rainville/travis-dashboard/\">\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<GitHub />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary=\"View Source\" />\n\t\t\t\t</ListItem>\n\t\t\t\t<ListItem component=\"a\" button href=\"https://github.com/maxime-rainville/travis-dashboard/actions?query=workflow%3A%22Build+and+Deploy%22\">\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<UpdateIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary=\"Refresh data\" secondary={ago} />\n\t\t\t\t</ListItem>\n\t\t\t</List>\n\t\t\t<div className={classes.drawerSpacer}></div>\n\t\t\t<List>\n\t\t\t\t<ListSubheader>Legend</ListSubheader>\n\t\t\t\t{\n\t\t\t\t\tstates.map(state => (\n\t\t\t\t\t\t<ListItem key={state}>\n\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t<span className={legendStyles({state}).legend}></span>\n\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t<ListItemText primary={state} />\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</List>\n\t\t</div>\n\t);\n}\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme: Theme) => ({\n\tdrawerHeader: { ...theme.mixins.toolbar },\n\tdrawerPaper: {\n\t\twidth: 250,\n\t\tbackgroundColor: theme.palette.background.default,\n\t\t[theme.breakpoints.up(\"md\")]: {\n\t\t\twidth: drawerWidth,\n\t\t\tposition: \"relative\",\n\t\t\theight: \"100%\",\n\t\t},\n\t},\n\troot: {\n\t\tminHeight: '100%',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column'\n\t},\n\tdrawerSpacer: {\n\t\tflexGrow: 1\n\t},\n}));\n","import { makeStyles, FormControl, InputLabel, Select, Input, MenuItem, Checkbox, ListItemText} from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useActions } from \"../../actions\";\nimport * as ReduxActions from \"../../actions/build\";\nimport { CategoryFilterType } from \"../../model\";\nimport { RootState } from \"../../reducers\";\n\ninterface Props {\n\tclassName?: string\n}\n\n\nconst categories: {[key in CategoryFilterType]: string} = {\n\tcore: 'Core',\n\tsupported: 'Supported',\n\tunsupported: 'Unsupported',\n\tnonmodule: 'Non-module'\n}\nexport function CategoryFilter({className}: Props) {\n\tconst {setCategoryFilter} = useActions(ReduxActions);\n\tconst {categoryFilters} = useSelector((state: RootState) => state.build);\n  const classes = useStyles();\n\n  if (!categoryFilters) {\n    return null;\n  }\n  \n  return (\n\t\t<FormControl className={classes.root}>\n        <InputLabel id=\"demo-mutiple-checkbox-label\" color=\"secondary\">Category</InputLabel>\n        <Select\n          labelId=\"demo-mutiple-checkbox-label\"\n          id=\"demo-mutiple-checkbox\"\n          multiple\n          value={categoryFilters}\n          onChange={(event) => setCategoryFilter(event.target.value)}\n          input={<Input />}\n          renderValue={(selected) => (selected as CategoryFilterType[]).map(key => categories[key]).join(', ')}\n        >\n          {Object.keys(categories).map((key) => (\n            <MenuItem key={key} value={key}>\n              <Checkbox checked={categoryFilters.indexOf(key as CategoryFilterType) > -1} />\n              <ListItemText primary={categories[(key as CategoryFilterType)]} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\t);\n}\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n    margin: theme.spacing(1),\n    width: 200\n  },\n}));\n","import { makeStyles, FormGroup, Switch, FormControlLabel, TextField } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useActions } from \"../../actions\";\nimport * as ReduxActions from \"../../actions/build\";\nimport { RootState } from \"../../reducers\";\nimport { CategoryFilter } from \"./CategoryFilter\";\n\ninterface Props {\n\tclassName?: string\n}\n\nexport function BuildForm({className}: Props) {\n\tconst {toggleFilter, setTerm} = useActions(ReduxActions);\n\tconst {filter} = useSelector((state: RootState) => state.build);\n\tconst classes = useStyles();\n\treturn (\n\t\t<FormGroup row className={`${className} ${classes.root}`}>\n\t\t\t<TextField \n\t\t\t\tlabel=\"Filter by name\" variant=\"filled\" color=\"secondary\"\n\t\t\t\tonChange={event => setTerm(event.target.value)} className={classes.term} />\n\t\t\t<CategoryFilter />\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={<Switch checked={filter === 'latestStable'} onChange={toggleFilter} />} \n\t\t\t\tlabel=\"Latest only\" color=\"secondary\"/>\n\t\t</FormGroup>\n\t);\n}\n\nconst useStyles = makeStyles(({\n\tterm: {\n\t\tflexGrow: 1\n\t},\n\troot: {\n\t}\n\n}));\n","import { makeStyles, Theme, Typography, Card, CardContent, Grid } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { Module } from \"../model\";\nimport { BranchBuild } from './BranchBuild';\n\nexport function Build({name, branches, state}: Module) {\n\tconst classes = useStyles({state});\n\n\treturn (\n\t\t<Grid item xs={6} sm={4} md={3}>\n\t\t\t<a href={`https://travis-ci.com/github/${name}/branches`} style={{textDecoration: 'none'}}>\n\t\t\t\t<Card className={classes.box}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography gutterBottom variant=\"h6\" component=\"h2\">\n\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t{ state !== 'passed' && <div className={classes.cardActions}>\n\t\t\t\t\t\t\t{Object.keys(branches).map(branch => <BranchBuild module={name} branch={branch} key={branch} build={branches[branch]} />)}\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\t\t\t</a>\n\t\t</Grid>\n\t);\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\tbox: (props: any) => ({\n\t\tborderRadius: 8,\n\t\ttextDecoration: 'none',\n\t\tbackground: props['state'] === 'passed' ? \"linear-gradient(45deg, #61b047 30%, #00ca99 90%)\" : undefined\n\t}),\n\n\ttext: {\n\t\tcolor: \"white\",\n\t},\n\n\tbranchBtn: {\n\t\tmargin: '0 8px 8px 0',\n\t\tflexGrow: 1\n\t},\n\n\tcardActions: {\n\t\tflexWrap: 'wrap',\n\t\tdisplay: 'flex'\n\t}\n}));\n","import { Grid, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Build } from \"../components\";\nimport { RootState } from \"../reducers\";\n\nexport function HomePage() {\n\tconst classes = useStyles();\n\tconst {modules, loading} = useSelector((state: RootState) => state.build);\n\n\treturn loading || !modules ? <CircularProgress /> : \t\n\t(\n\t\t<div className={classes.root}>\n\t\t\t<Grid className={classes.centerContainer} container direction=\"row\" justify=\"center\" alignItems=\"stretch\" spacing={3}> \n\t\t\t\t{modules.map( ({name, ...props}) => <Build key={name} name={name} {...props} />)}\n\t\t\t</Grid>\n\t\t</div>\n\t);\n}\n\nconst useStyles = makeStyles({\n\troot: {\n\t\ttextAlign: \"center\",\n\t\tpaddingTop: 20,\n\t\tpaddingLeft: 15,\n\t\tpaddingRight: 15,\n\t},\n\n\tcenterContainer: {\n\t\t// flex: 1,\n\t\t// height: \"90%\",\n\t\t// display: \"flex\",\n\t\t// alignItems: \"center\",\n\t\t// justifyContent: \"center\",\n\t\t// flexDirection: \"column\",\n\t},\n\n\tbutton: {\n\t\tmarginTop: 20,\n\t},\n});\n","import { CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../reducers\";\nimport { Doughnut } from 'react-chartjs-2';\nimport { buildStateColours } from '../components/BranchBuild';\nimport { BuildStateType } from \"../model\";\n\nconst labels: BuildStateType[] = [\n\t'failed',\n\t'canceled',\n\t'expired',\n\t'running',\n\t'passed'\n];\n\nconst backgroundColor = labels.map(state => buildStateColours[state]);\n\nfunction buildData(stats: {[state in BuildStateType]: number}) {\n\treturn {\n\t\tlabels,\n\t\tdatasets: [{\n\t\t\tdata: labels.map(label => stats[label]),\n\t\t\tbackgroundColor\n\t\t}]\n\t};\n}\n\n\nexport function StatsPage() {\n\tconst classes = useStyles();\n\tconst {stats, loading} = useSelector((state: RootState) => state.build);\n\n\treturn loading ? <CircularProgress /> : \t\n\t(\n\t\t<div className={classes.root}>\n\t\t\t<Doughnut data={buildData(stats)} legend={false}  />\n\t\t</div>\n\t);\n}\n\nconst useStyles = makeStyles({\n\troot: {\n\t\ttextAlign: \"center\",\n\t\tpaddingTop: 20,\n\t\tpaddingLeft: 15,\n\t\tpaddingRight: 15,\n\t},\n\n\tcenterContainer: {\n\t\t// flex: 1,\n\t\t// height: \"90%\",\n\t\t// display: \"flex\",\n\t\t// alignItems: \"center\",\n\t\t// justifyContent: \"center\",\n\t\t// flexDirection: \"column\",\n\t},\n\n\tbutton: {\n\t\tmarginTop: 20,\n\t},\n});\n","// prettier-ignore\nimport { Theme } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { HomePage, StatsPage } from \"./pages\";\n\nexport function Routes() {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={HomePage} />\n\t\t\t\t<Route path=\"/home\" component={HomePage} />\n\t\t\t\t<Route path=\"/stats\" component={StatsPage} />\n\t\t\t</Switch>\n\t\t</div>\n\t);\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\troot: {\n\t\tbackgroundColor: theme.palette.background.default,\n\t\toverflow: 'auto',\n\t\twidth: \"100%\",\n\t\theight: \"calc(100% - 56px)\",\n\t\tmarginTop: 56,\n\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\theight: \"calc(100% - 64px)\",\n\t\t\tmarginTop: 64,\n\t\t},\n\t},\n}));\n","// prettier-ignore\nimport { AppBar, Drawer as DrawerMui, Hidden, IconButton, Toolbar, Typography, useMediaQuery } from \"@material-ui/core\";\nimport { Theme } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { withRoot } from \"./withRoot\";\nimport { useActions } from \"./actions\";\nimport * as ReduxActions from \"./actions/build\";\nimport { Drawer } from './components/Drawer';\nimport { BuildForm} from \"./components/Form/BuildForm\";\n\nimport { Routes } from './Routes';\n\n\nfunction App() {\n\tconst todoActions = useActions(ReduxActions);\n\tReact.useEffect( () => {\n\t\ttodoActions.initBuildData();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst classes = useStyles();\n\tconst [mobileOpen, setMobileOpen] = React.useState(true);\n\t\n\tconst isMobile = useMediaQuery((theme: Theme) =>\n\t\ttheme.breakpoints.down(\"sm\")\n\t);\n\n\tconst handleDrawerToggle = () => {\n\t\tsetMobileOpen(!mobileOpen);\n\t};\n\n\treturn (\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t<div className={classes.root}>\n\t\t\t\t<div className={classes.appFrame}>\n\t\t\t\t\t<AppBar className={classes.appBar}>\n\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\t\t\t\tonClick={handleDrawerToggle}\n\t\t\t\t\t\t\t\tclassName={classes.navIconHide}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\tnoWrap={isMobile}\n\t\t\t\t\t\t\t\tclassName={classes.appTitle}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSilverstripe CMS Squad Dashboard\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<BuildForm className={classes.appForm} />\n\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t</AppBar>\n\t\t\t\t\t<Hidden mdUp>\n\t\t\t\t\t\t<DrawerMui\n\t\t\t\t\t\t\tvariant=\"temporary\"\n\t\t\t\t\t\t\tanchor={\"left\"}\n\t\t\t\t\t\t\topen={mobileOpen}\n\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClose={handleDrawerToggle}\n\t\t\t\t\t\t\tModalProps={{\n\t\t\t\t\t\t\t\tkeepMounted: true, // Better open performance on mobile.\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Drawer />\n\t\t\t\t\t\t</DrawerMui>\n\t\t\t\t\t</Hidden>\n\t\t\t\t\t<Hidden smDown>\n\t\t\t\t\t\t<DrawerMui\n\t\t\t\t\t\t\tvariant=\"permanent\"\n\t\t\t\t\t\t\topen\n\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Drawer />\n\t\t\t\t\t\t</DrawerMui>\n\t\t\t\t\t</Hidden>\n\t\t\t\t\t<Routes />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</BrowserRouter>\n\t);\n}\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme: Theme) => ({\n\troot: {\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t\tzIndex: 1,\n\t\toverflow: \"hidden\",\n\t},\n\tappFrame: {\n\t\tposition: \"relative\",\n\t\tdisplay: \"flex\",\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t},\n\tappBar: {\n\t\tzIndex: theme.zIndex.drawer + 1,\n\t\tposition: \"absolute\",\n\t},\n\tappTitle: {\n\t\tflexGrow: .7\n\t},\n\tappForm: {\n\t\tflexGrow: .3\n\t},\n\tnavIconHide: {\n\t\t[theme.breakpoints.up(\"md\")]: {\n\t\t\tdisplay: \"none\",\n\t\t},\n\t},\n\tdrawerPaper: {\n\t    width: 250,\n        backgroundColor: theme.palette.background.default,\n        [theme.breakpoints.up(\"md\")]: {\n                width: drawerWidth,\n                position: \"relative\",\n                height: \"100%\",\n        },\n\t},\n}));\n\nexport default withRoot(App);\n","import { BranchData, BranchList, BuildAction, BuildActions, BuildData, BuildDataPayload, BuildState, BuildStateType, FilterType, SetTermPayload, Module, SetCatPayload, CategoryFilterType } from \"../model\";\nimport createReducer from \"./createReducer\";\nimport { data as ssModuleData } from \"silverstripe-cms-meta\";\n\n\nconst initialState: BuildState = {\n\tmodules: [],\n\tloading: true,\n\traw: {},\n\tfilter: 'latestStable',\n\tterm: '',\n\tcategoryFilters: ['core', 'nonmodule', 'supported', 'unsupported'],\n\tstats: {\n\t\t'passed': 0,\n\t\t'errored': 0,\n\t\t'failed': 0,\n\t\t'running': 0,\n\t\t'expired': 0,\n\t\t'canceled': 0,\n\t\t'created': 0,\n\t\t'started': 0\n\t}\n};\n\nconst statePriority: BuildStateType[][] = [\n\t['errored', 'failed'],\n\t['canceled'],\n\t['expired'],\n\t['running', 'created', 'started'],\n\t['passed']\n];\n\n/**\n * Sort states with the least desirable one showing up first.\n * @param a\n * @param b\n */\nfunction sortByState(a: BuildStateType, b: BuildStateType) {\n\tif (a === b) {\n\t\treturn 0;\n\t}\n\n\tfor (const stateGroups of statePriority) {\n\t\tif (stateGroups.indexOf(a) > -1) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (stateGroups.indexOf(b) > -1) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\treturn 0;\n}\n\n/**\n * Sort module by build state and then by name.\n * @param a\n * @param b\n */\nfunction sortModule(a: Module, b: Module) {\n\tif (a === b) {\n\t\treturn 0;\n\t}\n\tconst stateSort = sortByState(a.state, b.state);\n\treturn stateSort !== 0 ? stateSort : a.name.localeCompare(b.name);\n}\n\n/**\n * Filter out branches that are not the latest. Branches that will be returned are:\n * - master/main\n * - the next minor release branch\n * - the last two patch release branch\n * @param branches\n * @param mod\n */\nfunction moduleBranchFilter(branches: BranchList, mod: string): BranchList {\n\tlet nextBranches: {\n\t\tnextMajor ?: string,\n\t\tnextMinor ?: string,\n\t\tnextPatch ?: string,\n\t\tpreviousPatch ?: string,\n\t} = { }\n\n\tconst keys = Object.keys(branches);\n\n\n\tif (keys.indexOf('master') > -1) {\n\t\tnextBranches.nextMajor = 'master';\n\t} else if (keys.indexOf('main') > -1) {\n\t\tnextBranches.nextMajor = 'main';\n\t}\n\n\tconst nextMinor = keys.filter(key => key.match(/^\\d+$/))\n\t\t.map(key => parseInt(key))\n\t\t.reduce((a,b) => Math.max(a,b), 0);\n\n\tif (nextMinor) {\n\t\tnextBranches.nextMinor = nextMinor.toString();\n\t\tconst patches = keys\n\t\t\t.filter(key => key.match(new RegExp(`^${nextMinor}\\\\.\\\\d+$`)))\n\t\t\t.map(key => {\n\t\t\t\treturn key.replace(`${nextMinor}.`, '').trim()\n\t\t\t})\n\t\t\t.map(key => parseInt(key)).sort()\n\t\t\t.slice(-2)\n\t\t\t.map(subVersion => `${nextMinor}.${subVersion}`);\n\n\t\tif (patches.length === 2) {\n\t\t\tnextBranches.nextPatch = patches[1];\n\t\t\tnextBranches.previousPatch = patches[0];\n\t\t} else if (patches.length === 1) {\n\t\t\tnextBranches.nextPatch = patches[0];\n\t\t}\n\t}\n\n\n\treturn Object.values(nextBranches).reduce((nextBranches, key) => {\n\t\treturn key === undefined ?\n\t\t\tnextBranches :\n\t\t\t{...nextBranches, [key]: branches[key]}\n\t}, {});\n}\n\n/**\n * Given a list of branches, find the worst \"state\". (e.g \"Running\" is worst than \"Passing\" and \"Failed\" is worst than \"running\")\n * This is use to attach a state to a given module.\n * @param accumulator\n * @param param1\n */\nfunction branchStateReduce(accumulator:BuildStateType, {state}:BranchData) {\n  return sortByState(accumulator, state) > 0 ? state : accumulator;\n}\n\n/**\n * Create an artificial state of expired for bulids that haven't run in more than 30 days.\n * @param data\n */\nfunction markExpiredBuild(data: BranchData): BranchData {\n  if (!data || data.state !== 'passed') {\n\t  return data;\n  }\n\n  const buildDate = new Date(data.started_at);\n  const now = new Date();\n  const expiry = new Date();\n  expiry.setDate(now.getDate() - 30);\n\n  return (buildDate < expiry) ? {...data, state: 'expired'} : data;\n}\n\nfunction filterModule(moduleName:string, categoryFilters: CategoryFilterType[]) {\n\tif (categoryFilters.length === 4) {\n\t\treturn true;\n\t}\n\t\n\tconst moduleMetaDada = ssModuleData.find((meta) => meta.repo === moduleName );\n\treturn moduleMetaDada ? (\n\t\t(categoryFilters.indexOf('core') > -1 && moduleMetaDada.core ) ||\n\t\t(categoryFilters.indexOf('supported') > -1 && moduleMetaDada.supported ) ||\n\t\t(categoryFilters.indexOf('unsupported') > -1 && !moduleMetaDada.supported )\n\t) : categoryFilters.indexOf('nonmodule') > -1;\n}\n\nfunction postProcess(data: BuildData, {filter, term, categoryFilters}: BuildState) {\n\treturn Object.keys(data)\n\t\t.filter((module) => filterModule(module, categoryFilters))\n\t\t.map(module => ({\n\t\t\tbranches: data[module],\n\t\t\tname: module,\n\t\t}))\n\t\t.filter(({name}) => (name.indexOf(term) !== -1))\n\t\t.map(({branches, ...data}) => ({\n\t\t\tbranches: filter === 'latestStable' ? moduleBranchFilter(branches, data.name) : branches,\n\t\t\t...data\n\t\t}))\n\t\t.map(({branches, ...data}) => {\n\t\t\tfor (const key in branches) {\n\t\t\t\tbranches[key] = markExpiredBuild(branches[key]);\n\t\t\t}\n\t\t\treturn {branches, ...data};\n\t\t})\n\t\t.map(data => ({...data, state: Object.values(data.branches).reduce(branchStateReduce, 'passed')}))\n\t\t.sort((a, b) => sortModule(a, b));\n}\n\n/**\n * Count builds by state type\n * @param bulidState \n */\nfunction countBuildStateType(bulidState: BuildState): BuildState {\n\tconst initStats = {\n\t\t'passed': 0,\n\t\t'errored': 0,\n\t\t'failed': 0,\n\t\t'running': 0,\n\t\t'expired': 0,\n\t\t'canceled': 0,\n\t\t'created': 0,\n\t\t'started': 0\n\t};\n\t\n\tconst stats = bulidState.modules.reduce((accumulator, module) => {\n\t\tObject.values(module.branches).forEach(branch => accumulator[branch.state]++);\n\t\treturn accumulator;\n\t}, initStats);\n\n\treturn {...bulidState, stats};\n}\n\n const reducer = createReducer<BuildState>(initialState, {\n\t[BuildActions.LOADING_BUILDS]() {\n\t\treturn initialState;\n\t},\n\t[BuildActions.BUILD_LOADED](state: BuildState, action: BuildAction) {\n\t\tconst {json, lastModified} = action.payload as BuildDataPayload;\n\t\treturn {\n\t\t\t...state,\n\t\t\tmodules: postProcess(json, state),\n\t\t\tlastModified: lastModified,\n\t\t\tloading: false,\n\t\t\traw: json\n\t\t};\n\t},\n\t[BuildActions.TOGGLE_FILTER]({filter, ...state}: BuildState) {\n\t\tconst nextFilter: FilterType = filter === 'latestStable' ? 'all' : 'latestStable';\n\t\tconst next = {\n\t\t\t...state,\n\t\t\tfilter: nextFilter\n\t\t};\n\t\treturn {...next, modules: postProcess(state.raw, next)};\n\t},\n\t[BuildActions.SET_TERM](state: BuildState, action: BuildAction) {\n\t\tstate.triggerSearchTimeout && clearTimeout(state.triggerSearchTimeout);\n\n\t\tconst {term, triggerSearchTimeout} =  action.payload as SetTermPayload;\n\t\treturn {\n\t\t\t...state,\n\t\t\tterm: term.toLocaleLowerCase(),\n\t\t\ttriggerSearchTimeout\n\t\t};\n\t},\n\t[BuildActions.TRIGGER_SEARCH](state: BuildState) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tmodules: postProcess(state.raw, state),\n\t\t};\n\t},\n\t[BuildActions.SET_CATEGORY_FILTER](state: BuildState, action: BuildAction) {\n\t\tconst {categoryFilters} = action.payload as SetCatPayload;\n\t\tconst next = {...state, categoryFilters}\n\n\t\treturn {...next, modules: postProcess(state.raw, next)};\n\t}\n});\n\nexport const build = (state: BuildState | undefined, action: any) => countBuildStateType(reducer(state, action));","/**\n * Created by toni on 12.03.2017.\n */\nimport { Reducer } from \"redux\";\nimport { Action } from \"../model\";\n\nexport default function createReducer<S>(\n\tinitialState: S,\n\thandlers: any\n): Reducer<S> {\n\tconst r = (state: S = initialState, action: Action): S => {\n\t\tif (handlers.hasOwnProperty(action.type)) {\n\t\t\treturn handlers[action.type](state, action);\n\t\t} else {\n\t\t\treturn state;\n\t\t}\n\t};\n\n\treturn r as Reducer<S>;\n}\n","import { createBrowserHistory } from \"history\";\nimport * as localforage from \"localforage\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createLogger } from \"redux-logger\";\nimport { PersistConfig, persistReducer, persistStore } from \"redux-persist\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst persistConfig: PersistConfig<any> = {\n\tkey: \"root\",\n\tversion: 1,\n\tstorage: localforage,\n\tblacklist: [],\n};\n\nconst logger = (createLogger as any)();\nconst history = createBrowserHistory();\n\nconst dev = process.env.NODE_ENV === \"development\";\n\nlet middleware = dev ? applyMiddleware(thunk, logger) : applyMiddleware(thunk);\n\nif (dev) {\n\tmiddleware = composeWithDevTools(middleware);\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer(history));\n\nexport default () => {\n\tconst store = createStore(persistedReducer, {}, middleware) as any;\n\tconst persistor = persistStore(store);\n\treturn { store, persistor };\n};\n\nexport { history };\n","import { History } from \"history\";\nimport { combineReducers } from \"redux\";\nimport { BuildState } from \"../model\";\nimport * as todoReducer from \"./build\";\n\nexport interface RootState {\n\tbuild: BuildState;\n}\n\nexport default (history: History) =>\n\tcombineReducers({\n\t\t...todoReducer,\n\t});\n","import { Typography } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport configureStore from \"./configureStore\";\n\nconst { persistor, store } = configureStore();\n\nexport function ReduxRoot() {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<PersistGate\n\t\t\t\tloading={<Typography>Loading...</Typography>}\n\t\t\t\tpersistor={persistor}\n\t\t\t>\n\t\t\t\t<App />\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t);\n}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { ReduxRoot } from \"./ReduxRoot\";\n\nconst rootEl = document.getElementById(\"root\");\nReactDOM.render(<ReduxRoot />, rootEl);\n\n// comment in for PWA with service worker in production mode\n// registerServiceWorker();\n"],"sourceRoot":""}