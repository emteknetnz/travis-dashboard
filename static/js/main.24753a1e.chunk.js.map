{"version":3,"sources":["withRoot.tsx","model/build.ts","actions/index.ts","actions/build.ts","reducers/build.ts","reducers/createReducer.ts","configureStore.tsx","reducers/index.ts","components/BranchBuild.tsx","components/Drawer.tsx","components/Form/CategoryFilter.tsx","components/Form/BuildForm.tsx","components/Build.tsx","pages/HomePage.tsx","Routes.tsx","App.tsx","ReduxRoot.tsx","index.tsx"],"names":["theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","type","BuildActions","useActions","actions","deps","dispatch","useDispatch","useMemo","Array","isArray","map","a","bindActionCreators","initBuildData","LOADING_BUILDS","fetch","process","method","then","response","json","data","lastModified","headers","has","Date","get","undefined","BUILD_LOADED","payload","toggleFilter","TOGGLE_FILTER","setTerm","term","triggerSearchTimeout","setTimeout","TRIGGER_SEARCH","SET_TERM","setCategoryFilter","categoryFilters","SET_CATEGORY_FILTER","initialState","modules","loading","raw","filter","statePriority","sortByState","b","stateGroups","indexOf","moduleBranchFilter","branches","mod","nextBranches","keys","Object","nextMajor","nextMinor","key","match","parseInt","reduce","Math","max","toString","patches","RegExp","replace","trim","sort","slice","subVersion","length","nextPatch","previousPatch","values","branchStateReduce","accumulator","state","markExpiredBuild","buildDate","started_at","now","expiry","setDate","getDate","postProcess","module","moduleName","moduleMetaDada","ssModuleData","find","meta","repo","core","supported","filterModule","name","stateSort","localeCompare","sortModule","build","handlers","action","hasOwnProperty","createReducer","nextFilter","next","clearTimeout","toLocaleLowerCase","persistConfig","version","storage","localforage","blacklist","history","createLogger","createBrowserHistory","middleware","applyMiddleware","thunk","persistedReducer","persistReducer","combineReducers","todoReducer","buildStateColours","failed","errored","passed","running","created","started","expired","canceled","variantByState","BranchBuild","branch","id","classes","useStyles","Button","href","variant","className","branchBtn","makeStyles","props","margin","flexGrow","background","property","mapping","styledBy","textDecoration","states","legendStyles","legend","width","height","borderRadius","Drawer","useSelector","ago","round","getTime","root","drawerHeader","Divider","List","ListItem","button","onClick","push","ListItemIcon","ListItemText","component","drawerSpacer","ListSubheader","mixins","toolbar","drawerPaper","backgroundColor","default","breakpoints","up","position","minHeight","display","flexDirection","categories","unsupported","nonmodule","CategoryFilter","ReduxActions","FormControl","InputLabel","color","Select","labelId","multiple","value","onChange","event","target","input","Input","renderValue","selected","join","MenuItem","Checkbox","checked","spacing","BuildForm","FormGroup","row","TextField","label","FormControlLabel","control","Switch","Build","Grid","item","xs","sm","md","style","Card","box","CardContent","Typography","gutterBottom","cardActions","text","flexWrap","HomePage","CircularProgress","centerContainer","container","direction","justify","alignItems","textAlign","paddingTop","paddingLeft","paddingRight","marginTop","Routes","exact","path","overflow","Component","zIndex","appFrame","appBar","drawer","appTitle","appForm","navIconHide","withRoot","todoActions","React","mobileOpen","setMobileOpen","isMobile","useMediaQuery","down","handleDrawerToggle","basename","AppBar","Toolbar","IconButton","aria-label","noWrap","Hidden","mdUp","anchor","open","paper","onClose","ModalProps","keepMounted","smDown","ThemeProvider","CssBaseline","store","createStore","persistor","persistStore","configureStore","rootEl","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.24753a1e.chunk.js","sourcesContent":["import { CssBaseline } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport * as React from \"react\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tlight: \"#e5e5e5\",\n\t\t\tmain: \"#727272\",\n\t\t\tdark: \"#363839\",\n\t\t\tcontrastText: \"#fff\",\n\t\t},\n\t\tsecondary: {\n\t\t\tlight: \"#005AE1\",\n\t\t\tmain: \"#0F3287\",\n\t\t\tdark: \"#051E2D\",\n\t\t\tcontrastText: \"#fff\",\n\t\t},\n\t\ttype: 'dark'\n\t},\n});\n\nexport function withRoot(Component: any) {\n\tfunction WithRoot(props: object) {\n\t\t// MuiThemeProvider makes the theme available down the React tree\n\t\t// thanks to React context.\n\t\treturn (\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t{/* Reboot kickstart an elegant, consistent, and simple baseline to build upon. */}\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Component {...props} />\n\t\t\t</ThemeProvider>\n\t\t);\n\t}\n\n\treturn WithRoot;\n}\n","\nexport type BuildStateType = 'passed'|'errored'|'failed'|'running'|'expired'|'canceled'|'created'|'started';\nexport type FilterType = 'all'|'latestStable';\nexport type CategoryFilterType = 'core'|'supported'|'unsupported'|'nonmodule';\n\nexport interface BranchData {\n  id: number\n  started_at: string\n  state: BuildStateType\n}\n\nexport interface BranchList {\n  [branch: string]: BranchData\n}\n\nexport interface BuildData {\n  [module: string]: {\n    [branch: string]: BranchData\n  }\n}\n\nexport interface BuildDataPayload {\n  json: BuildData\n  lastModified: Date\n}\n\nexport interface SetTermPayload {\n  term: string, \n  triggerSearchTimeout: number\n}\n\nexport interface SetCatPayload {\n  categoryFilters: CategoryFilterType[]\n}\nexport interface Module {\n  name: string\n  branches: BranchList\n  state: BuildStateType\n}\n\nexport type BuildActionType<t,p> = {\n  type: t\n  payload: p\n}\n\nexport enum BuildActions {\n  LOADING_BUILDS = \"LOADING_BUILDS\",\n  BUILD_LOADED = \"BUILD_LOADED\",\n  TOGGLE_FILTER = \"TOGGLE_FILTER\",\n  SET_TERM = \"SET_TERM\",\n  TRIGGER_SEARCH = \"TRIGGER_SEARCH\",\n  SET_CATEGORY_FILTER = \"SET_CATEGORY_FILTER\",\n}\n\nexport type BuildAction =\n  | BuildActionType<typeof BuildActions.LOADING_BUILDS, void>\n  | BuildActionType<typeof BuildActions.BUILD_LOADED, BuildDataPayload>\n  | BuildActionType<typeof BuildActions.TOGGLE_FILTER, void>\n  | BuildActionType<typeof BuildActions.SET_TERM, SetTermPayload>\n  | BuildActionType<typeof BuildActions.TRIGGER_SEARCH, void>\n  | BuildActionType<typeof BuildActions.SET_CATEGORY_FILTER, SetCatPayload>\n;\n\nexport interface BuildState {\n  modules: Module[],\n  loading: boolean,\n  lastModified?: Date,\n  raw: BuildData,\n  filter: FilterType,\n  term: string,\n  triggerSearchTimeout?: number,\n  categoryFilters: CategoryFilterType[],\n}\n","import { useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nexport function useActions(actions: any, deps?: any): any {\n\tconst dispatch = useDispatch();\n\treturn useMemo(\n\t\t() => {\n\t\t\tif (Array.isArray(actions)) {\n\t\t\t\treturn actions.map(a => bindActionCreators(a, dispatch));\n\t\t\t}\n\t\t\treturn bindActionCreators(actions, dispatch);\n\t\t},\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\tdeps ? [dispatch, ...deps] : deps\n\t);\n}\n","import { BuildActions, CategoryFilterType } from \"../model\";\n\ninterface reduxAction {\n\ttype: string,\n\tpayload?: any\n}\n\ntype dispatchCallback = (action: reduxAction) => void;\n\nexport function initBuildData() {\n\treturn (dispatch: dispatchCallback) => {\n\t\tdispatch({type: BuildActions.LOADING_BUILDS});\n\n\t\tfetch(process.env.PUBLIC_URL + '/buildData.json', {method: 'GET'})\n\t\t  .then((response) => response.json().then((data) => ({ \n\t\t\tjson: data,\n\t\t\tlastModified: \n\t\t\t\tresponse.headers.has('last-modified') ? \n\t\t\t\tnew Date(response.headers.get('last-modified') as string) : \n\t\t\t\tundefined\n\t\t  \t})))\n\t\t  .then(data => dispatch({type: BuildActions.BUILD_LOADED, payload: data}));\n\t\t\n\t}\n}\n\nexport function toggleFilter() {\n\treturn {type: BuildActions.TOGGLE_FILTER}\n}\n\nexport function setTerm(term: string) {\n\treturn (dispatch: dispatchCallback) => {\n\t\tconst triggerSearchTimeout = setTimeout(() => {\n\t\t\tdispatch({type: BuildActions.TRIGGER_SEARCH});\n\t\t}, 500)\n\n\t\tdispatch({\n\t\t\ttype: BuildActions.SET_TERM, \n\t\t\tpayload:{\n\t\t\t\tterm,\n\t\t\t\ttriggerSearchTimeout\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function setCategoryFilter(categoryFilters: CategoryFilterType[]) {\n\treturn {type: BuildActions.SET_CATEGORY_FILTER, payload: {categoryFilters}}\n}","import { BranchData, BranchList, BuildAction, BuildActions, BuildData, BuildDataPayload, BuildState, BuildStateType, FilterType, SetTermPayload, Module, SetCatPayload, CategoryFilterType } from \"../model\";\nimport createReducer from \"./createReducer\";\nimport { data as ssModuleData } from \"silverstripe-cms-meta\";\n\n\nconst initialState: BuildState = {\n\tmodules: [],\n\tloading: true,\n\traw: {},\n\tfilter: 'latestStable',\n\tterm: '',\n\tcategoryFilters: ['core', 'nonmodule', 'supported', 'unsupported']\n};\n\nconst statePriority: BuildStateType[][] = [\n\t['errored', 'failed'],\n\t['canceled'],\n\t['expired'],\n\t['running', 'created', 'started'],\n\t['passed']\n];\n\n/**\n * Sort states with the least desirable one showing up first.\n * @param a\n * @param b\n */\nfunction sortByState(a: BuildStateType, b: BuildStateType) {\n\tif (a === b) {\n\t\treturn 0;\n\t}\n\n\tfor (const stateGroups of statePriority) {\n\t\tif (stateGroups.indexOf(a) > -1) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (stateGroups.indexOf(b) > -1) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\treturn 0;\n}\n\n/**\n * Sort module by build state and then by name.\n * @param a\n * @param b\n */\nfunction sortModule(a: Module, b: Module) {\n\tif (a === b) {\n\t\treturn 0;\n\t}\n\tconst stateSort = sortByState(a.state, b.state);\n\treturn stateSort !== 0 ? stateSort : a.name.localeCompare(b.name);\n}\n\n/**\n * Filter out branches that are not the latest. Branches that will be returned are:\n * - master/main\n * - the next minor release branch\n * - the last two patch release branch\n * @param branches\n * @param mod\n */\nfunction moduleBranchFilter(branches: BranchList, mod: string): BranchList {\n\tlet nextBranches: {\n\t\tnextMajor ?: string,\n\t\tnextMinor ?: string,\n\t\tnextPatch ?: string,\n\t\tpreviousPatch ?: string,\n\t} = { }\n\n\tconst keys = Object.keys(branches);\n\n\n\tif (keys.indexOf('master') > -1) {\n\t\tnextBranches.nextMajor = 'master';\n\t} else if (keys.indexOf('main') > -1) {\n\t\tnextBranches.nextMajor = 'main';\n\t}\n\n\tconst nextMinor = keys.filter(key => key.match(/^\\d+$/))\n\t\t.map(key => parseInt(key))\n\t\t.reduce((a,b) => Math.max(a,b), 0);\n\n\tif (nextMinor) {\n\t\tnextBranches.nextMinor = nextMinor.toString();\n\t\tconst patches = keys\n\t\t\t.filter(key => key.match(new RegExp(`^${nextMinor}\\\\.\\\\d+$`)))\n\t\t\t.map(key => {\n\t\t\t\treturn key.replace(`${nextMinor}.`, '').trim()\n\t\t\t})\n\t\t\t.map(key => parseInt(key)).sort()\n\t\t\t.slice(-2)\n\t\t\t.map(subVersion => `${nextMinor}.${subVersion}`);\n\n\t\tif (patches.length === 2) {\n\t\t\tnextBranches.nextPatch = patches[1];\n\t\t\tnextBranches.previousPatch = patches[0];\n\t\t} else if (patches.length === 1) {\n\t\t\tnextBranches.nextPatch = patches[0];\n\t\t}\n\t}\n\n\n\treturn Object.values(nextBranches).reduce((nextBranches, key) => {\n\t\treturn key === undefined ?\n\t\t\tnextBranches :\n\t\t\t{...nextBranches, [key]: branches[key]}\n\t}, {});\n}\n\n/**\n * Given a list of branches, find the worst \"state\". (e.g \"Running\" is worst than \"Passing\" and \"Failed\" is worst than \"running\")\n * This is use to attach a state to a given module.\n * @param accumulator\n * @param param1\n */\nfunction branchStateReduce(accumulator:BuildStateType, {state}:BranchData) {\n  return sortByState(accumulator, state) > 0 ? state : accumulator;\n}\n\n/**\n * Create an artificial state of expired for bulids that haven't run in more than 30 days.\n * @param data\n */\nfunction markExpiredBuild(data: BranchData): BranchData {\n  if (!data || data.state !== 'passed') {\n\t  return data;\n  }\n\n  const buildDate = new Date(data.started_at);\n  const now = new Date();\n  const expiry = new Date();\n  expiry.setDate(now.getDate() - 30);\n\n  return (buildDate < expiry) ? {...data, state: 'expired'} : data;\n}\n\nfunction filterModule(moduleName:string, categoryFilters: CategoryFilterType[]) {\n\tif (categoryFilters.length === 4) {\n\t\treturn true;\n\t}\n\t\n\tconst moduleMetaDada = ssModuleData.find((meta) => meta.repo === moduleName );\n\treturn moduleMetaDada ? (\n\t\t(categoryFilters.indexOf('core') > -1 && moduleMetaDada.core ) ||\n\t\t(categoryFilters.indexOf('supported') > -1 && moduleMetaDada.supported ) ||\n\t\t(categoryFilters.indexOf('unsupported') > -1 && !moduleMetaDada.supported )\n\t) : categoryFilters.indexOf('nonmodule') > -1;\n}\n\nfunction postProcess(data: BuildData, {filter, term, categoryFilters}: BuildState) {\n\treturn Object.keys(data)\n\t\t.filter((module) => filterModule(module, categoryFilters))\n\t\t.map(module => ({\n\t\t\tbranches: data[module],\n\t\t\tname: module,\n\t\t}))\n\t\t.filter(({name}) => (name.indexOf(term) !== -1))\n\t\t.map(({branches, ...data}) => ({\n\t\t\tbranches: filter === 'latestStable' ? moduleBranchFilter(branches, data.name) : branches,\n\t\t\t...data\n\t\t}))\n\t\t.map(({branches, ...data}) => {\n\t\t\tfor (const key in branches) {\n\t\t\t\tbranches[key] = markExpiredBuild(branches[key]);\n\t\t\t}\n\t\t\treturn {branches, ...data};\n\t\t})\n\t\t.map(data => ({...data, state: Object.values(data.branches).reduce(branchStateReduce, 'passed')}))\n\t\t.sort((a, b) => sortModule(a, b));\n}\n\nexport const build = createReducer<BuildState>(initialState, {\n\t[BuildActions.LOADING_BUILDS]() {\n\t\treturn initialState;\n\t},\n\t[BuildActions.BUILD_LOADED](state: BuildState, action: BuildAction) {\n\t\tconst {json, lastModified} = action.payload as BuildDataPayload;\n\t\treturn {\n\t\t\t...state,\n\t\t\tmodules: postProcess(json, state),\n\t\t\tlastModified: lastModified,\n\t\t\tloading: false,\n\t\t\traw: json\n\t\t};\n\t},\n\t[BuildActions.TOGGLE_FILTER]({filter, ...state}: BuildState) {\n\t\tconst nextFilter: FilterType = filter === 'latestStable' ? 'all' : 'latestStable';\n\t\tconst next = {\n\t\t\t...state,\n\t\t\tfilter: nextFilter\n\t\t};\n\t\treturn {...next, modules: postProcess(state.raw, next)};\n\t},\n\t[BuildActions.SET_TERM](state: BuildState, action: BuildAction) {\n\t\tstate.triggerSearchTimeout && clearTimeout(state.triggerSearchTimeout);\n\n\t\tconst {term, triggerSearchTimeout} =  action.payload as SetTermPayload;\n\t\treturn {\n\t\t\t...state,\n\t\t\tterm: term.toLocaleLowerCase(),\n\t\t\ttriggerSearchTimeout\n\t\t};\n\t},\n\t[BuildActions.TRIGGER_SEARCH](state: BuildState) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tmodules: postProcess(state.raw, state),\n\t\t};\n\t},\n\t[BuildActions.SET_CATEGORY_FILTER](state: BuildState, action: BuildAction) {\n\t\tconst {categoryFilters} = action.payload as SetCatPayload;\n\t\tconst next = {...state, categoryFilters}\n\n\t\treturn {...next, modules: postProcess(state.raw, next)};\n\t}\n});\n","/**\n * Created by toni on 12.03.2017.\n */\nimport { Reducer } from \"redux\";\nimport { Action } from \"../model\";\n\nexport default function createReducer<S>(\n\tinitialState: S,\n\thandlers: any\n): Reducer<S> {\n\tconst r = (state: S = initialState, action: Action): S => {\n\t\tif (handlers.hasOwnProperty(action.type)) {\n\t\t\treturn handlers[action.type](state, action);\n\t\t} else {\n\t\t\treturn state;\n\t\t}\n\t};\n\n\treturn r as Reducer<S>;\n}\n","import { createBrowserHistory } from \"history\";\nimport * as localforage from \"localforage\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createLogger } from \"redux-logger\";\nimport { PersistConfig, persistReducer, persistStore } from \"redux-persist\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst persistConfig: PersistConfig<any> = {\n\tkey: \"root\",\n\tversion: 1,\n\tstorage: localforage,\n\tblacklist: [],\n};\n\nconst logger = (createLogger as any)();\nconst history = createBrowserHistory();\n\nconst dev = process.env.NODE_ENV === \"development\";\n\nlet middleware = dev ? applyMiddleware(thunk, logger) : applyMiddleware(thunk);\n\nif (dev) {\n\tmiddleware = composeWithDevTools(middleware);\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer(history));\n\nexport default () => {\n\tconst store = createStore(persistedReducer, {}, middleware) as any;\n\tconst persistor = persistStore(store);\n\treturn { store, persistor };\n};\n\nexport { history };\n","import { History } from \"history\";\nimport { combineReducers } from \"redux\";\nimport { BuildState } from \"../model\";\nimport * as todoReducer from \"./build\";\n\nexport interface RootState {\n\tbuild: BuildState;\n}\n\nexport default (history: History) =>\n\tcombineReducers({\n\t\t...todoReducer,\n\t});\n","import { makeStyles, Button } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport {BuildStateType} from \"../model/build\";\n\nexport const buildStateColours: { [state in BuildStateType]: string } = {\n\tfailed: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n\terrored: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n\tpassed: \"linear-gradient(45deg, #61b047 30%, #00ca99 90%)\",\n\trunning: \"linear-gradient(45deg, #fede6b 30%, #8bfe6b 90%)\",\n\tcreated: \"linear-gradient(45deg, #fede6b 30%, #8bfe6b 90%)\",\n\tstarted: \"linear-gradient(45deg, #fede6b 30%, #8bfe6b 90%)\",\n\texpired: \"linear-gradient(45deg, #6b8bfe 30%, #de6bfe 90%)\",\n\tcanceled: \"linear-gradient(45deg, #ad495e 30%, #ad9749 90%)\",\n};\n\ninterface Props {\n\tmodule: string,\n\tbranch: string,\n\tbuild: {\n\t\tid: number,\n\t\tstate: string\n\t}\n}\n\nconst variantByState: any = {\n\terrored: 'contained',\n\tfailed: 'contained',\n\tpassed: 'outlined',\n\tcreated:  'contained',\n\tstarted:  'contained',\n\trunning:  'contained',\n}\n\nexport function BranchBuild({module, branch, build: {id, state}}: Props) {\n\tconst classes = useStyles({state});\n\treturn <Button \n\t\thref={`https://travis-ci.com/github/${module}/builds/${id}`} \n\t\tvariant={variantByState[state]} \nclassName={classes.branchBtn}>{branch}</Button>;\n}\n\nconst styledBy = (property: string, props: any, mapping: any): string =>\n\tmapping[props[property]];\n\nconst useStyles = makeStyles(({\n\tbranchBtn: props => {\n\t\tconst background = styledBy('state', props, buildStateColours)\n\t\treturn {\n\t\t\tmargin: '0 8px 8px 0',\n\t\t\tflexGrow: 1,\n\t\t\tbackground,\n\t\t\ttextDecoration: 'none'\n\t\t}\n\t},\n}));\n","// prettier-ignore\nimport { Divider, List, ListItem, ListItemIcon, ListItemText, ListSubheader } from \"@material-ui/core\";\nimport { Theme } from \"@material-ui/core/styles\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport GitHub from \"@material-ui/icons/GitHub\";\nimport UpdateIcon from '@material-ui/icons/Update';\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { history } from \"../configureStore\";\nimport { RootState } from \"../reducers/index\";\nimport { BuildStateType } from \"../model\";\nimport { buildStateColours } from './BranchBuild';\n\nconst states: BuildStateType[] = [\n\t'failed',\n\t'canceled',\n\t'expired',\n\t'running',\n\t'passed'\n];\n\nconst styledBy = (property: string, props: any, mapping: any): string =>\n\tmapping[props[property]]\n\nconst legendStyles = makeStyles({\n\tlegend: props => ({\n\t\tbackground: styledBy('state', props, buildStateColours),\n\t\twidth: 24,\n\t\theight: 24,\n\t\tborderRadius: 3\n\t})\n});\n\nexport function Drawer(props: {  }) {\n\tconst classes = useStyles();\n\tconst lastModified = useSelector((state: RootState) => state.build.lastModified);\n\tconst ago = lastModified ? \n\t    `Fetched ${Math.round(((new Date()).getTime() - lastModified.getTime()) / 1000 / 60)} min ago` :\n\t\t'';\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div className={classes.drawerHeader} />\n\t\t\t<Divider />\n\t\t\t<List>\n\t\t\t\t<ListItem button onClick={() => history.push(\"/\")}>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<HomeIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary=\"Builds\" />\n\t\t\t\t</ListItem>\n\t\t\t\t<ListItem component=\"a\" button href=\"https://github.com/maxime-rainville/travis-dashboard/\">\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<GitHub />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary=\"View Source\" />\n\t\t\t\t</ListItem>\n\t\t\t\t<ListItem component=\"a\" button href=\"https://github.com/maxime-rainville/travis-dashboard/actions?query=workflow%3A%22Build+and+Deploy%22\">\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<UpdateIcon />\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText primary=\"Refresh data\" secondary={ago} />\n\t\t\t\t</ListItem>\n\t\t\t</List>\n\t\t\t<div className={classes.drawerSpacer}></div>\n\t\t\t<List>\n\t\t\t\t<ListSubheader>Legend</ListSubheader>\n\t\t\t\t{\n\t\t\t\t\tstates.map(state => (\n\t\t\t\t\t\t<ListItem key={state}>\n\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t<span className={legendStyles({state}).legend}></span>\n\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t<ListItemText primary={state} />\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</List>\n\t\t</div>\n\t);\n}\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme: Theme) => ({\n\tdrawerHeader: { ...theme.mixins.toolbar },\n\tdrawerPaper: {\n\t\twidth: 250,\n\t\tbackgroundColor: theme.palette.background.default,\n\t\t[theme.breakpoints.up(\"md\")]: {\n\t\t\twidth: drawerWidth,\n\t\t\tposition: \"relative\",\n\t\t\theight: \"100%\",\n\t\t},\n\t},\n\troot: {\n\t\tminHeight: '100%',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column'\n\t},\n\tdrawerSpacer: {\n\t\tflexGrow: 1\n\t},\n}));\n","import { makeStyles, FormControl, InputLabel, Select, Input, MenuItem, Checkbox, ListItemText} from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useActions } from \"../../actions\";\nimport * as ReduxActions from \"../../actions/build\";\nimport { CategoryFilterType } from \"../../model\";\nimport { RootState } from \"../../reducers\";\n\ninterface Props {\n\tclassName?: string\n}\n\n\nconst categories: {[key in CategoryFilterType]: string} = {\n\tcore: 'Core',\n\tsupported: 'Supported',\n\tunsupported: 'Unsupported',\n\tnonmodule: 'Non-module'\n}\nexport function CategoryFilter({className}: Props) {\n\tconst {setCategoryFilter} = useActions(ReduxActions);\n\tconst {categoryFilters} = useSelector((state: RootState) => state.build);\n  const classes = useStyles();\n\n  if (!categoryFilters) {\n    return null;\n  }\n  \n  return (\n\t\t<FormControl className={classes.root}>\n        <InputLabel id=\"demo-mutiple-checkbox-label\" color=\"secondary\">Category</InputLabel>\n        <Select\n          labelId=\"demo-mutiple-checkbox-label\"\n          id=\"demo-mutiple-checkbox\"\n          multiple\n          value={categoryFilters}\n          onChange={(event) => setCategoryFilter(event.target.value)}\n          input={<Input />}\n          renderValue={(selected) => (selected as CategoryFilterType[]).map(key => categories[key]).join(', ')}\n        >\n          {Object.keys(categories).map((key) => (\n            <MenuItem key={key} value={key}>\n              <Checkbox checked={categoryFilters.indexOf(key as CategoryFilterType) > -1} />\n              <ListItemText primary={categories[(key as CategoryFilterType)]} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\t);\n}\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n    margin: theme.spacing(1),\n    width: 200\n  },\n}));\n","import { makeStyles, FormGroup, Switch, FormControlLabel, TextField } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useActions } from \"../../actions\";\nimport * as ReduxActions from \"../../actions/build\";\nimport { RootState } from \"../../reducers\";\nimport { CategoryFilter } from \"./CategoryFilter\";\n\ninterface Props {\n\tclassName?: string\n}\n\nexport function BuildForm({className}: Props) {\n\tconst {toggleFilter, setTerm} = useActions(ReduxActions);\n\tconst {filter} = useSelector((state: RootState) => state.build);\n\tconst classes = useStyles();\n\treturn (\n\t\t<FormGroup row className={`${className} ${classes.root}`}>\n\t\t\t<TextField \n\t\t\t\tlabel=\"Filter by name\" variant=\"filled\" color=\"secondary\"\n\t\t\t\tonChange={event => setTerm(event.target.value)} className={classes.term} />\n\t\t\t<CategoryFilter />\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={<Switch checked={filter === 'latestStable'} onChange={toggleFilter} />} \n\t\t\t\tlabel=\"Latest only\" color=\"secondary\"/>\n\t\t</FormGroup>\n\t);\n}\n\nconst useStyles = makeStyles(({\n\tterm: {\n\t\tflexGrow: 1\n\t},\n\troot: {\n\t}\n\n}));\n","import { makeStyles, Theme, Typography, Card, CardContent, Grid } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { Module } from \"../model\";\nimport { BranchBuild } from './BranchBuild';\n\nexport function Build({name, branches, state}: Module) {\n\tconst classes = useStyles({state});\n\n\treturn (\n\t\t<Grid item xs={6} sm={4} md={3}>\n\t\t\t<a href={`https://travis-ci.com/github/${name}/branches`} style={{textDecoration: 'none'}}>\n\t\t\t\t<Card className={classes.box}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography gutterBottom variant=\"h6\" component=\"h2\">\n\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t{ state !== 'passed' && <div className={classes.cardActions}>\n\t\t\t\t\t\t\t{Object.keys(branches).map(branch => <BranchBuild module={name} branch={branch} key={branch} build={branches[branch]} />)}\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\t\t\t</a>\n\t\t</Grid>\n\t);\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\tbox: (props: any) => ({\n\t\tborderRadius: 8,\n\t\ttextDecoration: 'none',\n\t\tbackground: props['state'] === 'passed' ? \"linear-gradient(45deg, #61b047 30%, #00ca99 90%)\" : undefined\n\t}),\n\n\ttext: {\n\t\tcolor: \"white\",\n\t},\n\n\tbranchBtn: {\n\t\tmargin: '0 8px 8px 0',\n\t\tflexGrow: 1\n\t},\n\n\tcardActions: {\n\t\tflexWrap: 'wrap',\n\t\tdisplay: 'flex'\n\t}\n}));\n","import { Grid, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Build } from \"../components\";\nimport { RootState } from \"../reducers\";\n\nexport function HomePage() {\n\tconst classes = useStyles();\n\tconst {modules, loading} = useSelector((state: RootState) => state.build);\n\n\treturn loading || !modules ? <CircularProgress /> : \t\n\t(\n\t\t<div className={classes.root}>\n\t\t\t<Grid className={classes.centerContainer} container direction=\"row\" justify=\"center\" alignItems=\"stretch\" spacing={3}> \n\t\t\t\t{modules.map( ({name, ...props}) => <Build key={name} name={name} {...props} />)}\n\t\t\t</Grid>\n\t\t</div>\n\t);\n}\n\nconst useStyles = makeStyles({\n\troot: {\n\t\ttextAlign: \"center\",\n\t\tpaddingTop: 20,\n\t\tpaddingLeft: 15,\n\t\tpaddingRight: 15,\n\t},\n\n\tcenterContainer: {\n\t\t// flex: 1,\n\t\t// height: \"90%\",\n\t\t// display: \"flex\",\n\t\t// alignItems: \"center\",\n\t\t// justifyContent: \"center\",\n\t\t// flexDirection: \"column\",\n\t},\n\n\tbutton: {\n\t\tmarginTop: 20,\n\t},\n});\n","// prettier-ignore\nimport { Theme } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { HomePage } from \"./pages\";\n\nexport function Routes() {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Route exact={true} path=\"/\" component={HomePage} />\n\t\t\t<Route exact={true} path=\"/home\" component={HomePage} />\n\t\t</div>\n\t);\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\troot: {\n\t\tbackgroundColor: theme.palette.background.default,\n\t\toverflow: 'auto',\n\t\twidth: \"100%\",\n\t\theight: \"calc(100% - 56px)\",\n\t\tmarginTop: 56,\n\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\theight: \"calc(100% - 64px)\",\n\t\t\tmarginTop: 64,\n\t\t},\n\t},\n}));\n","// prettier-ignore\nimport { AppBar, Drawer as DrawerMui, Hidden, IconButton, Toolbar, Typography, useMediaQuery } from \"@material-ui/core\";\nimport { Theme } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport * as React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { withRoot } from \"./withRoot\";\nimport { useActions } from \"./actions\";\nimport * as ReduxActions from \"./actions/build\";\nimport { Drawer } from './components/Drawer';\nimport { BuildForm} from \"./components/Form/BuildForm\";\n\nimport { Routes } from './Routes';\n\n\nfunction App() {\n\tconst todoActions = useActions(ReduxActions);\n\tReact.useEffect( () => {\n\t\ttodoActions.initBuildData();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst classes = useStyles();\n\tconst [mobileOpen, setMobileOpen] = React.useState(true);\n\t\n\tconst isMobile = useMediaQuery((theme: Theme) =>\n\t\ttheme.breakpoints.down(\"sm\")\n\t);\n\n\tconst handleDrawerToggle = () => {\n\t\tsetMobileOpen(!mobileOpen);\n\t};\n\n\treturn (\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t<div className={classes.root}>\n\t\t\t\t<div className={classes.appFrame}>\n\t\t\t\t\t<AppBar className={classes.appBar}>\n\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\t\t\t\tonClick={handleDrawerToggle}\n\t\t\t\t\t\t\t\tclassName={classes.navIconHide}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\tnoWrap={isMobile}\n\t\t\t\t\t\t\t\tclassName={classes.appTitle}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSilverstripe CMS Squad Dashboard\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<BuildForm className={classes.appForm} />\n\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t</AppBar>\n\t\t\t\t\t<Hidden mdUp>\n\t\t\t\t\t\t<DrawerMui\n\t\t\t\t\t\t\tvariant=\"temporary\"\n\t\t\t\t\t\t\tanchor={\"left\"}\n\t\t\t\t\t\t\topen={mobileOpen}\n\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClose={handleDrawerToggle}\n\t\t\t\t\t\t\tModalProps={{\n\t\t\t\t\t\t\t\tkeepMounted: true, // Better open performance on mobile.\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Drawer />\n\t\t\t\t\t\t</DrawerMui>\n\t\t\t\t\t</Hidden>\n\t\t\t\t\t<Hidden smDown>\n\t\t\t\t\t\t<DrawerMui\n\t\t\t\t\t\t\tvariant=\"permanent\"\n\t\t\t\t\t\t\topen\n\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Drawer />\n\t\t\t\t\t\t</DrawerMui>\n\t\t\t\t\t</Hidden>\n\t\t\t\t\t<Routes />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</BrowserRouter>\n\t);\n}\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme: Theme) => ({\n\troot: {\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t\tzIndex: 1,\n\t\toverflow: \"hidden\",\n\t},\n\tappFrame: {\n\t\tposition: \"relative\",\n\t\tdisplay: \"flex\",\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t},\n\tappBar: {\n\t\tzIndex: theme.zIndex.drawer + 1,\n\t\tposition: \"absolute\",\n\t},\n\tappTitle: {\n\t\tflexGrow: .7\n\t},\n\tappForm: {\n\t\tflexGrow: .3\n\t},\n\tnavIconHide: {\n\t\t[theme.breakpoints.up(\"md\")]: {\n\t\t\tdisplay: \"none\",\n\t\t},\n\t},\n\tdrawerPaper: {\n\t    width: 250,\n        backgroundColor: theme.palette.background.default,\n        [theme.breakpoints.up(\"md\")]: {\n                width: drawerWidth,\n                position: \"relative\",\n                height: \"100%\",\n        },\n},\n}));\n\nexport default withRoot(App);\n","import { Typography } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport configureStore from \"./configureStore\";\n\nconst { persistor, store } = configureStore();\n\nexport function ReduxRoot() {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<PersistGate\n\t\t\t\tloading={<Typography>Loading...</Typography>}\n\t\t\t\tpersistor={persistor}\n\t\t\t>\n\t\t\t\t<App />\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t);\n}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { ReduxRoot } from \"./ReduxRoot\";\n\nconst rootEl = document.getElementById(\"root\");\nReactDOM.render(<ReduxRoot />, rootEl);\n\n// comment in for PWA with service worker in production mode\n// registerServiceWorker();\n"],"sourceRoot":""}